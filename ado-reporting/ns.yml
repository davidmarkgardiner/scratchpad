- task: Go@0
  displayName: 'Validate Data'
  inputs:
    command: 'test'
    arguments: '-v validation_test.go'
    workingDirectory: '$(System.DefaultWorkingDirectory)/validation'
  script: |
    echo "##[section]Starting Data Validation Tests"
    echo "##vso[task.setprogress value=0;]Initializing validation tests..."
    
    if ! output=$(go test -v validation_test.go 2>&1); then
      error_msg=$(echo "$output" | tail -n 3)
      echo "##vso[task.setvariable variable=ErrorMessage;]Validation failed: $error_msg"
      echo "##vso[task.setvariable variable=HasError;]true"
      return 1 2>/dev/null || exit 0
    fi
    
    echo "##vso[task.setprogress value=100;]Validation completed"
    echo "##vso[task.setvariable variable=ValidationStatus;]Passed"

- task: Go@0
  displayName: 'Create manifest files'
  inputs:
    command: 'run'
    arguments: 'createFiles.go'
    workingDirectory: '$(System.DefaultWorkingDirectory)/createFiles'
  script: |
    echo "##[section]Starting Manifest File Creation"
    echo "##vso[task.setprogress value=0;]Initializing manifest creation..."
    
    if ! output=$(go run createFiles.go 2>&1); then
      error_msg=$(echo "$output" | tail -n 2)
      echo "##vso[task.setvariable variable=ErrorMessage;]Manifest creation failed: $error_msg"
      echo "##vso[task.setvariable variable=HasError;]true"
      return 1 2>/dev/null || exit 0
    fi
    
    echo "##vso[task.setprogress value=100;]Manifest files created successfully"
    echo "##vso[task.setvariable variable=ManifestStatus;]Created"

- task: Go@0
  displayName: 'Get dependencies for updateKust'
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)/updateKust'
  script: |
    echo "##[section]Fetching Dependencies"
    echo "##vso[task.setprogress value=0;]Starting dependency resolution..."
    
    echo "##[command]Running: go get -d"
    if ! go get -d; then
      echo "##vso[task.logissue type=warning;sourcepath=go.mod]Some dependencies might not be resolved"
    fi
    
    echo "##vso[task.setprogress value=100;]Dependencies resolved"

- task: Go@0
  displayName: 'Update Kustomization with folder name'
  inputs:
    command: 'run'
    arguments: 'updateKust.go'
    workingDirectory: '$(System.DefaultWorkingDirectory)/updateKust'
  script: |
    echo "##[section]Updating Kustomization"
    echo "##vso[task.setprogress value=0;]Starting kustomization update..."
    
    if ! output=$(go run updateKust.go 2>&1); then
      error_msg=$(echo "$output" | tail -n 2)
      echo "##vso[task.setvariable variable=ErrorMessage;]Kustomization update failed: $error_msg"
      echo "##vso[task.setvariable variable=HasError;]true"
      return 1 2>/dev/null || exit 0
    fi
    
    echo "##vso[task.setprogress value=100;]Kustomization updated successfully"
    echo "##vso[task.setvariable variable=KustomizeStatus;]Updated"

# Final status check
- script: |
    echo "##[section]Pipeline Execution Summary"
    
    if [ "$(HasError)" = "true" ]; then
      # Return the consolidated error message without exit code
      echo "##[error]$(ErrorMessage)"
      echo "##vso[task.complete result=Failed;]$(ErrorMessage)"
      exit 0
    else
      echo "##vso[task.complete result=Succeeded;]Pipeline completed successfully"
    fi
  displayName: 'Check Pipeline Status'
  condition: always()
