# Global values shared across all charts
global:
  environment: production
  clusterDomain: cluster.local
  imageRegistry: acr.io/mycompany
  imagePullSecrets:
    - name: acr-secret
  # Enable automatic fixing of non-running pods
  autoFixPods: true
  # Enable automatic installation of missing CRDs
  autoInstallCRDs: true
  # Global CRDs that are required for all components
  requiredCRDs:
    - "ingressroutes.traefik.containo.us"
    - "middlewares.traefik.containo.us"

# Enable/disable specific charts
database:
  enabled: true
  # Database-specific values
  image:
    repository: postgres
    tag: 14.5
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
    limits:
      memory: 2Gi
      cpu: 1000m
  # CRDs required by the database component
  requiresCRDs: false
  requiredCRDs: []

cache:
  enabled: true
  # Cache-specific values
  image:
    repository: redis
    tag: 7.0
  persistence:
    enabled: true
    size: 5Gi
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  # CRDs required by the cache component
  requiresCRDs: false
  requiredCRDs: []

api:
  enabled: true
  # API-specific values
  image:
    repository: myapi
    tag: v1.0.0
  replicas: 3
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m
  # API depends on database and cache
  config:
    databaseUrl: "postgresql://postgres:password@database:5432/mydb"
    cacheUrl: "redis://cache:6379/0"
  # CRDs required by the API component
  requiresCRDs: true
  requiredCRDs:
    - "apirequests.myapi.example.com"
    - "apiconfigs.myapi.example.com"

frontend:
  enabled: true
  # Frontend-specific values
  image:
    repository: myfrontend
    tag: v1.0.0
  replicas: 2
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m
  # Frontend depends on API
  config:
    apiUrl: "http://api:8080"
  # CRDs required by the frontend component
  requiresCRDs: false
  requiredCRDs: []

monitoring:
  enabled: true
  # Monitoring-specific values
  image:
    repository: prometheus
    tag: v2.40.0
  persistence:
    enabled: true
    size: 8Gi
  resources:
    requests:
      memory: 1Gi
      cpu: 500m
    limits:
      memory: 2Gi
      cpu: 1000m
  # CRDs required by the monitoring component
  requiresCRDs: true
  requiredCRDs:
    - "prometheuses.monitoring.coreos.com"
    - "servicemonitors.monitoring.coreos.com"
    - "podmonitors.monitoring.coreos.com"
    - "alertmanagers.monitoring.coreos.com"
    - "prometheusrules.monitoring.coreos.com" 