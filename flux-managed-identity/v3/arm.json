{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of the AKS cluster"
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "test", 
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (determines which shared MI to use)"
      }
    },
    "sharedManagedIdentityResourceId": {
      "type": "string",
      "metadata": {
        "description": "Full resource ID of the shared managed identity for this environment"
      }
    },
    "fluxConfigurationName": {
      "type": "string",
      "defaultValue": "[format('gitops-{0}', parameters('environment'))]",
      "metadata": {
        "description": "Name of the Flux configuration"
      }
    },
    "gitRepositoryUrl": {
      "type": "string",
      "metadata": {
        "description": "Azure DevOps Git repository URL"
      }
    },
    "gitBranch": {
      "type": "string",
      "defaultValue": "[parameters('environment')]",
      "metadata": {
        "description": "Git branch to sync from (defaults to environment name)"
      }
    },
    "namespace": {
      "type": "string",
      "defaultValue": "flux-system",
      "metadata": {
        "description": "Kubernetes namespace for Flux"
      }
    },
    "kustomizationPaths": {
      "type": "object",
      "defaultValue": {
        "infrastructure": "[format('./environments/{0}/infrastructure', parameters('environment'))]",
        "applications": "[format('./environments/{0}/applications', parameters('environment'))]"
      },
      "metadata": {
        "description": "Paths for different kustomizations"
      }
    },
    "syncIntervalSeconds": {
      "type": "int",
      "defaultValue": 300,
      "metadata": {
        "description": "Sync interval in seconds"
      }
    },
    "useUserAssignedIdentityForCluster": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether the AKS cluster uses user-assigned identity"
      }
    },
    "clusterIdentityPrincipalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Principal ID of cluster identity (if user-assigned)"
      }
    }
  },
  "variables": {
    "aksResourceId": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]",
    "sharedManagedIdentityClientId": "[reference(parameters('sharedManagedIdentityResourceId'), '2023-01-31').clientId]",
    "federatedCredentialName": "[format('flux-{0}-{1}', parameters('clusterName'), parameters('environment'))]",
    "readerRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}/{1}', last(split(parameters('sharedManagedIdentityResourceId'), '/')), variables('federatedCredentialName'))]",
      "properties": {
        "issuer": "[reference(variables('aksResourceId'), '2023-10-01').oidcIssuerProfile.issuerURL]",
        "subject": "system:serviceaccount:flux-system:source-controller",
        "audiences": [
          "api://AzureADTokenExchange"
        ]
      }
    },
    {
      "condition": "[parameters('useUserAssignedIdentityForCluster')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('aksResourceId'), parameters('clusterIdentityPrincipalId'), variables('readerRoleDefinitionId'))]",
      "scope": "[variables('aksResourceId')]",
      "properties": {
        "principalId": "[parameters('clusterIdentityPrincipalId')]",
        "roleDefinitionId": "[variables('readerRoleDefinitionId')]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.KubernetesConfiguration/extensions",
      "apiVersion": "2023-05-01",
      "name": "flux",
      "scope": "[variables('aksResourceId')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials', last(split(parameters('sharedManagedIdentityResourceId'), '/')), variables('federatedCredentialName'))]"
      ],
      "properties": {
        "extensionType": "microsoft.flux",
        "autoUpgradeMinorVersion": true,
        "configurationSettings": {
          "workloadIdentity.enable": "true",
          "workloadIdentity.azureClientId": "[variables('sharedManagedIdentityClientId')]"
        }
      }
    },
    {
      "type": "Microsoft.KubernetesConfiguration/fluxConfigurations",
      "apiVersion": "2024-11-01",
      "name": "[parameters('fluxConfigurationName')]",
      "scope": "[variables('aksResourceId')]",
      "dependsOn": [
        "[extensionResourceId(variables('aksResourceId'), 'Microsoft.KubernetesConfiguration/extensions', 'flux')]"
      ],
      "properties": {
        "scope": "cluster",
        "namespace": "[parameters('namespace')]",
        "sourceKind": "GitRepository",
        "suspend": false,
        "waitForReconciliation": true,
        "reconciliationWaitDuration": "PT10M",
        "gitRepository": {
          "url": "[parameters('gitRepositoryUrl')]",
          "provider": "azure",
          "repositoryRef": {
            "branch": "[parameters('gitBranch')]"
          },
          "syncIntervalInSeconds": "[parameters('syncIntervalSeconds')]",
          "timeoutInSeconds": 600
        },
        "kustomizations": {
          "infrastructure": {
            "path": "[parameters('kustomizationPaths').infrastructure]",
            "dependsOn": [],
            "timeoutInSeconds": 600,
            "syncIntervalInSeconds": "[parameters('syncIntervalSeconds')]",
            "retryIntervalInSeconds": 120,
            "prune": true,
            "force": false,
            "wait": true,
            "postBuild": {
              "substitute": {
                "CLUSTER_NAME": "[parameters('clusterName')]",
                "ENVIRONMENT": "[parameters('environment')]",
                "NAMESPACE": "[parameters('namespace')]"
              }
            }
          },
          "applications": {
            "path": "[parameters('kustomizationPaths').applications]",
            "dependsOn": ["infrastructure"],
            "timeoutInSeconds": 900,
            "syncIntervalInSeconds": "[mul(parameters('syncIntervalSeconds'), 2)]",
            "retryIntervalInSeconds": 180,
            "prune": true,
            "force": false,
            "wait": true,
            "postBuild": {
              "substitute": {
                "CLUSTER_NAME": "[parameters('clusterName')]",
                "ENVIRONMENT": "[parameters('environment')]",
                "REPLICAS": "[if(equals(parameters('environment'), 'prod'), '3', '1')]"
              },
              "substituteFrom": [
                {
                  "kind": "ConfigMap",
                  "name": "[format('{0}-config', parameters('environment'))]",
                  "optional": true
                },
                {
                  "kind": "Secret",
                  "name": "[format('{0}-secrets', parameters('environment'))]",
                  "optional": true
                }
              ]
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "fluxConfigurationName": {
      "type": "string",
      "value": "[parameters('fluxConfigurationName')]"
    },
    "sharedManagedIdentityClientId": {
      "type": "string",
      "value": "[variables('sharedManagedIdentityClientId')]"
    },
    "federatedCredentialName": {
      "type": "string",
      "value": "[variables('federatedCredentialName')]"
    },
    "environment": {
      "type": "string",
      "value": "[parameters('environment')]"
    }
  }
}