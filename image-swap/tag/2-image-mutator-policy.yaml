apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: image-mutator
  annotations:
    policies.kyverno.io/title: Image Mutator
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/category: Sample
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      This policy mutates container images from container-registry.xxx.net to use docker.io.
spec:
  background: false
  rules:
    - name: mutate-container-images
      match:
        any:
        - resources:
            kinds:
            - Pod
            namespaces:
            - a*
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"
      preconditions:
        all:
        - key: "{{ contains(request.object.spec.containers[0].image, 'container-registry.xxx.net/') }}"
          operator: Equals
          value: true
      mutate:
        foreach:
        - list: "request.object.spec.containers"
          patchStrategicMerge:
            spec:
              containers:
              - name: "{{ element.name }}"
                image: "docker.io/{{ regex_replace_all_literal('^.*\\.net/', element.image, '') }}"
              imagePullSecrets:
              - name: "acr-secret"
    
    - name: mutate-init-container-images
      match:
        any:
        - resources:
            kinds:
            - Pod
            namespaces:
            - a*
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"
      preconditions:
        all:
        - key: "{{ request.object.spec.initContainers[] || `[]` | length(@) }}"
          operator: GreaterThanOrEquals
          value: 1
        - key: "{{ contains(request.object.spec.initContainers[0].image, 'container-registry.xxx.net/') }}"
          operator: Equals
          value: true
      mutate:
        foreach:
        - list: "request.object.spec.initContainers"
          patchStrategicMerge:
            spec:
              initContainers:
              - name: "{{ element.name }}"
                image: "docker.io/{{ regex_replace_all_literal('^.*\\.net/', element.image, '') }}"
    
    - name: mutate-docker-images
      match:
        any:
        - resources:
            kinds:
            - Pod
            namespaces:
            - a*
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"
      preconditions:
        all:
        - key: "{{ contains(request.object.spec.containers[0].image, 'docker.io/') }}"
          operator: Equals
          value: true
      mutate:
        foreach:
        - list: "request.object.spec.containers"
          patchStrategicMerge:
            spec:
              containers:
              - name: "{{ element.name }}"
                image: "container-registry.xxx.net/{{ regex_replace_all_literal('^docker\\.io/', element.image, '') }}"
              imagePullSecrets:
              - name: "acr-secret"
    
    - name: mutate-docker-init-container-images
      match:
        any:
        - resources:
            kinds:
            - Pod
            namespaces:
            - a*
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"
      preconditions:
        all:
        - key: "{{ request.object.spec.initContainers[] || `[]` | length(@) }}"
          operator: GreaterThanOrEquals
          value: 1
        - key: "{{ contains(request.object.spec.initContainers[0].image, 'docker.io/') }}"
          operator: Equals
          value: true
      mutate:
        foreach:
        - list: "request.object.spec.initContainers"
          patchStrategicMerge:
            spec:
              initContainers:
              - name: "{{ element.name }}"
                image: "container-registry.xxx.net/{{ regex_replace_all_literal('^docker\\.io/', element.image, '') }}" 