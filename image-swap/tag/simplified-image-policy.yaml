apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: simplified-image-policy
  annotations:
    policies.kyverno.io/title: Image Push Job Generator
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/category: Sample
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >-
      This policy verifies images in ACR and generates jobs with image information
      for missing images.
spec:
  background: false
  rules:

    - name: generate-push-job
      match:
        any:
        - resources:
            kinds:
            - Pod
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"

      generate:
        apiVersion: batch/v1
        kind: Job
        name: "push-image-{{ request.object.metadata.name }}"
        namespace: "{{request.namespace}}"
        synchronize: false
        data:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: "push-image-{{ request.object.metadata.name }}"
            labels:
              skip-verify: "true"
          spec:
            template:
              metadata:
                labels:
                  skip-verify: "true"
              spec:
                containers:
                - name: push-image
                  image: mcr.microsoft.com/azure-cli
                  env:
                  - name: POD_NAME
                    value: "{{ request.object.metadata.name }}"
                  - name: POD_NAMESPACE
                    value: "{{ request.namespace }}"
                  - name: IMAGE_INFO
                    value: "{{ regex_replace_all('^([^/]+/)?(.+)$', request.object.spec.containers[0].image, '$2') }}"
                  # - name: AZURE_CLIENT_ID
                  #   valueFrom:
                  #     secretKeyRef:
                  #       name: acr-auth
                  #       key: client-id
                  # - name: AZURE_CLIENT_SECRET
                  #   valueFrom:
                  #     secretKeyRef:
                  #       name: acr-auth
                  #       key: client-secret
                  # - name: AZURE_TENANT_ID
                  #   valueFrom:
                  #     secretKeyRef:
                  #       name: acr-auth
                  #       key: tenant-id
                  command:
                  - /bin/bash
                  - -c
                  - |
                    echo "Job processing image information for pod $POD_NAME in namespace $POD_NAMESPACE"
                    echo "IMAGE_INFO: $IMAGE_INFO"
                    echo "Performing actions based on image information..."
                    sleep 30
                restartPolicy: Never
            backoffLimit: 3 


    - name: mutate-container-images
      match:
        any:
        - resources:
            kinds:
            - Pod
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"
      preconditions:
        all:
        - key: "{{ images.verified.*.verified || `false` }}"
          operator: AnyIn
          value: 
          - true
          - false
      mutate:
        foreach:
        - list: "request.object.spec.containers"
          patchStrategicMerge:
            spec:
              containers:
              - name: "{{ element.name }}"
                image: "{{ regex_replace_all('^(localhost/|(?:[a-z0-9]+\\.)+[a-z0-9]+/)?(.*)$', element.image, 'docker.io/$2') }}"
              imagePullSecrets:
              - name: "acr-secret"
    
    - name: mutate-init-container-images
      match:
        any:
        - resources:
            kinds:
            - Pod
      exclude:
        any:
        - resources:
            selector:
              matchLabels:
                skip-verify: "true"
      preconditions:
        all:
        - key: "{{ request.object.spec.initContainers[] || `[]` | length(@) }}"
          operator: GreaterThanOrEquals
          value: 1
      mutate:
        foreach:
        - list: "request.object.spec.initContainers"
          patchStrategicMerge:
            spec:
              initContainers:
              - name: "{{ element.name }}"
                image: "{{ regex_replace_all('^(localhost/|(?:[a-z0-9]+\\.)+[a-z0-9]+/)?(.*)$', element.image, 'docker.io/$2') }}" 