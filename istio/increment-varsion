#!/bin/bash

# Function to increment the version number
increment_version() {
    local rev="$1"
    if [[ $rev =~ asm-([0-9]+)-([0-9]+) ]]; then
        local major="${BASH_REMATCH[1]}"
        local minor="${BASH_REMATCH[2]}"
        new_minor=$((minor + 1))
        echo "asm-${major}-${new_minor}"
    else
        echo "Invalid version format: $rev"
        return 1
    fi
}

# Function to process a single file
process_file() {
    local file="$1"
    echo "Processing: $file"
    
    # Create backup
    cp "$file" "${file}.bak"
    
    # Check if istio.io/rev exists
    if grep -q 'istio.io/rev: asm-[0-9]\+-[0-9]\+' "$file"; then
        # Extract current version and update it
        current_rev=$(grep -o 'istio.io/rev: asm-[0-9]\+-[0-9]\+' "$file" | cut -d' ' -f2)
        new_rev=$(increment_version "$current_rev")
        if [ $? -eq 0 ]; then
            # Update the version
            sed -i "s|istio.io/rev: ${current_rev}|istio.io/rev: ${new_rev}|g" "$file"
            echo "Updated version from ${current_rev} to ${new_rev} in: $file"
        else
            echo "Failed to process version in: $file"
            mv "${file}.bak" "$file"
            return 1
        fi
    else
        # Add istio.io/rev if it doesn't exist
        if grep -q 'commonLabels:' "$file"; then
            # Add after commonLabels
            sed -i '/commonLabels:/a\  istio.io/rev: asm-1-23' "$file"
            echo "Added istio.io/rev: asm-1-23 to: $file"
        else
            # Add commonLabels section if it doesn't exist
            echo -e "\ncommonLabels:\n  istio.io/rev: asm-1-23" >> "$file"
            echo "Added commonLabels section with istio.io/rev: asm-1-23 to: $file"
        fi
    fi
    
    if [ $? -eq 0 ]; then
        echo "Successfully updated: $file"
        rm "${file}.bak"
    else
        echo "Error processing: $file"
        mv "${file}.bak" "$file"
    fi
}

# Main script
echo "Starting to process kustomization files..."

# Find and process all kustomization.yaml files
find . -name "kustomization.yaml" | while read -r file; do
    process_file "$file"
done

echo "Processing complete."
