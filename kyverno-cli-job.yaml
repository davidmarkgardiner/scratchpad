apiVersion: batch/v1
kind: Job
metadata:
  name: kyverno-cli-apply-job
  namespace: kyverno-cli
spec:
  template:
    metadata:
      labels:
        app: kyverno-cli-job
    spec:
      serviceAccountName: kyverno-cli
      containers:
      - name: kyverno-cli
        image: ghcr.io/kyverno/kyverno-cli:v1.13.0
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - |
          # Copy policy from ConfigMap
          cp /policies/disallow-latest-tag.yaml /tmp/
          
          # Create a test resource
          cat > /tmp/test-pod.yaml << EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: nginx-test
            namespace: default
          spec:
            containers:
            - name: nginx
              image: nginx:latest
          EOF
          
          # Apply the policy to the test resource
          echo "Testing policy against resource with latest tag (should fail):"
          kyverno apply /tmp/disallow-latest-tag.yaml --resource /tmp/test-pod.yaml --policy-report
          
          # Create a valid resource
          cat > /tmp/valid-pod.yaml << EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: nginx-test-valid
            namespace: default
          spec:
            containers:
            - name: nginx
              image: nginx:1.21.6
          EOF
          
          # Apply the policy to the valid resource
          echo "Testing policy against resource with specific tag (should pass):"
          kyverno apply /tmp/disallow-latest-tag.yaml --resource /tmp/valid-pod.yaml --policy-report
          
          # Apply policy to cluster resources (if needed)
          # echo "Applying policy to cluster resources:"
          # kyverno apply /tmp/disallow-latest-tag.yaml --cluster --policy-report
        volumeMounts:
        - name: policies-volume
          mountPath: /policies
      volumes:
      - name: policies-volume
        configMap:
          name: kyverno-cli-policies
      restartPolicy: Never
  backoffLimit: 1 